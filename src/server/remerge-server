#!/usr/bin/env bash
#
# Build binary packages for the given client and 'emerge' command line.
#
# usage: remerge-server <client> <emerge-command>

# source server functions and environment
. /usr/lib/remerge/server.sh $1 || die "unable to source server configuration"

# get emerge command
shift
[ -z "$*" ] && die "nothing to do"

# remove previous log file
rm -f $REMERGE_LOG_FILE

# mount chroot directories
ebegin "mounting chroot directories"
remerge-chroot-mount $REMERGE_CLIENT
eend $? || die

# write state files
echo emerge $* > $REMERGE_CMD_FILE
echo running > $REMERGE_STATE_FILE

# emerge inside chroot
ebegin "running 'emerge $*'"
chroot $REMERGE_CLIENT_DIR /bin/bash -c '
  . /lib/gentoo/functions.sh
  einfo $(env-update)
  source /etc/profile
  eselect news read --quiet all
  '"$REMERGE_EMERGE $*"'
'
eend $? \
 && state=done \
 || state=failed
echo $state > $REMERGE_STATE_FILE

# cleanup after world update
if [ $state = done ] && [[ $* =~ (^| )@?world($| ) ]]
then
  ebegin "running 'emerge --depclean'"
  chroot $REMERGE_CLIENT_DIR /bin/bash -c 'emerge --depclean'
  eend $?
fi

# unmount chroot directories
ebegin "unmounting chroot directories"
remerge-chroot-umount $REMERGE_CLIENT
eend $? || die

# display install instructions if emerge succeeded
[ $state = done ] \
  && einfo run \'$(cat $REMERGE_CMD_FILE | sed 's/emerge/emerge -g/g')\' \
           or \'remerge-install\' to install locally || exit 1
