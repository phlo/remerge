#!/usr/bin/env bash
#
# Mount the given client's chroot directories.
#
# usage: remerge-chroot-mount <client>

# source server functions and environment
. /usr/lib/remerge/server.sh $1 || die "unable to source server configuration"

# require root privileges
require_root

# check mounted state file
[ -f $REMERGE_MOUNTED_FILE ] && die "already mounted"

# wrapper to 'die' - perform additional cleanup
udie () {
  remerge-chroot-umount $REMERGE_CLIENT
  die "$*"
}

# mount relevant system directories
mount -o rbind /dev $REMERGE_CLIENT_DIR/dev || udie "unable to mount /dev"
mount -t proc none $REMERGE_CLIENT_DIR/proc || udie "unable to mount /proc"
mount -o bind /sys $REMERGE_CLIENT_DIR/sys || udie "unable to mount /sys"

# mount /tmp
mount -o size=$REMERGE_TMP_SIZE,uid=portage,gid=portage,mode=775,nosuid,noatime,nodev -t tmpfs tmpfs $REMERGE_CLIENT_DIR/tmp \
  || udie "unable to mount $REMERGE_CLIENT_DIR/tmp"
mount -o bind,noatime $REMERGE_CLIENT_DIR/tmp $REMERGE_CLIENT_DIR/var/tmp \
  || udie "unable to mount $REMERGE_CLIENT_DIR/var/tmp"

# mount distfiles directory
mount -o bind \
  $(portageq distdir) \
  $REMERGE_DISTDIR \
    || udie "unable to mount distfiles"

# mount main ebuild repository
repo=$(chroot $REMERGE_CLIENT_DIR portageq get_repo_path / gentoo)
repo="${REMERGE_CLIENT_DIR}${repo}"
mkdir -p $repo
mount -o bind $(portageq get_repo_path / gentoo) $repo \
  || udie "unable to mount main repository"

# copy resolv config
cp /etc/resolv.conf $REMERGE_CLIENT_DIR/etc/resolv.conf \
  || udie "unable to copy resolv.conf"

# set state
touch $REMERGE_MOUNTED_FILE
